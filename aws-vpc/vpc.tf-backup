provider "aws" {
  region     = "ap-south-1"
  access_key = ""
  secret_key = ""
}

resource "aws_vpc" "eksvpc" {
cidr_block = "11.0.0.0/16"
instance_tenancy = "default"
enable_dns_hostnames= true


tags = {
 Name = "Cloud-VPC"
   }
}

variable "public_subnet_cidrs" {
type = list(string)
description = "Public subnet"
default = ["11.0.1.0/24","11.0.2.0/24"]
}

variable "private_subnet_cidrs" {
type = list(string)
description = " Private subnet"
default = ["11.0.3.0/24","11.0.4.0/24"]

}

resource "aws_subnet" "eks_subnet" {
count = length(var.public_subnet_cidrs)
vpc_id = aws_vpc.eksvpc.id
cidr_block = var.public_subnet_cidrs[count.index]

tags = {
   Name = "Public-subnet-${count.index + 1}"
   type = "public"
   }
}

resource "aws_subnet" "eks_private_subnet" {
count = length(var.private_subnet_cidrs)
vpc_id = aws_vpc.eksvpc.id
cidr_block = var.private_subnet_cidrs[count.index]

tags = {
   Name = "Private-Subnet-${count.index + 1}"
   type = "private"
   }
 }
 
resource "aws_eip" "nat_eip" {
count = length(var.private_subnet_cidrs)
domain = "vpc"
}
resource "aws_nat_gateway" "nat_gateway" {
count = length(var.private_subnet_cidrs)
depends_on = [aws_eip.nat_eip]
allocation_id = aws_eip.nat_eip[count.index].id
subnet_id = aws_subnet.eks_subnet[count.index].id
tags = {
  Name = "Private NAT GW ${count.index + 1}"
}
}

resource "aws_internet_gateway" "iwg" {
vpc_id = aws_vpc.eksvpc.id
}

resource "aws_route_table" "public_route" {
vpc_id = aws_vpc.eksvpc.id
route {
cidr_block = "0.0.0.0/0"
gateway_id = aws_internet_gateway.iwg.id
}

tags = {
 Name = "Public Route Table"

}
}

resource "aws_route_table" "private_route" {
count = length(var.private_subnet_cidrs)
vpc_id = aws_vpc.eksvpc.id
depends_on = [aws_nat_gateway.nat_gateway]
route {
cidr_block = "0.0.0.0/0"
nat_gateway_id = aws_nat_gateway.nat_gateway[count.index].id
}
tags = {
Name = "private-route-${count.index + 1}"
}
}


resource "aws_route_table_association" "public_sub_ass" {
count = length(var.public_subnet_cidrs)
subnet_id = aws_subnet.eks_subnet[count.index].id
route_table_id = aws_route_table.public_route.id 

}

resource "aws_route_table_association" "private_sub_ass" {
count = length(var.private_subnet_cidrs)
subnet_id = aws_subnet.eks_private_subnet[count.index].id
route_table_id = aws_route_table.private_route[count.index].id
}
